RewriteEngine On

# Redirect old format to new clean URLs
# Redirect /details.php?storeCode=artline&other=params to /artline/details?other=params
RewriteCond %{QUERY_STRING} ^(.*)storeCode=([^&]+)(.*)$
RewriteRule ^([^/]+)\.php$ /%2/$1?%1%3 [R=301,L]

# Serve existing files directly (including CSS, JS, images, etc.)
RewriteCond %{REQUEST_FILENAME} -f
RewriteRule ^ - [L]

# Serve existing directories directly
RewriteCond %{REQUEST_FILENAME} -d
RewriteRule ^ - [L]

# Handle static assets for stores (CSS, JS, images, fonts, etc.)
# If request is like /storename/css/file.css, serve /css/file.css directly
RewriteRule ^([^/]+)/(css|js|img|images|fonts|vendors|logos)/(.+)$ /$2/$3 [L]

# Handle store directories with PHP files (multi-store system)
# If request is like /storename/file.php, rewrite to /file.php with storeCode parameter
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^([^/]+)/(.+\.php)$ /$2?storeCode=$1 [L,QSA]

# Handle store directories with other files
# If request is like /storename/somepage, rewrite to /somepage.php with storeCode parameter
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{DOCUMENT_ROOT}/$2.php -f
RewriteRule ^([^/]+)/([^/]+)/?$ /$2.php?storeCode=$1 [L,QSA]

# Remove .php extension from URLs (for direct access)
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{REQUEST_FILENAME}\.php -f
RewriteRule ^([^/]+)/?$ $1.php [L,QSA]

# Prevent rewriting default.php
RewriteRule ^default\.php$ - [L]

# Rewrite any other requests with a parameter or redirect to default when there is nothing after the domain
RewriteRule ^$ /default.php [L]
# Single word requests become store codes (only if no file/directory exists)
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^([^/]+)/?$ /?storeCode=$1 [L,QSA]